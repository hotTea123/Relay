Q1.select和epoll 的非阻塞有什么区别？
Q2.该中继服务器中，非阻塞体现在什么地方？
A：1.accept和listen也会阻塞 2.epoll+阻塞需要精细的设计
Q3：socket缓冲区不够了怎么办？会发生什么情况？
A：需要对报文大小进行限制，禁止客户端一次性发送过大的数据，如果过大需要进行分片
Q4:报文的设计？
A：必须设计头部字段，指明报文大小，如果不指定在发送的时候没有问题，因为vector已经生成，
但是接收的时候不知道vector要设置为多大，我的设计是接受的时候得接收两次，第一次先接受头部，
然后再根据头部的len生成缓冲区，再把头部和实体体都放入vector缓冲区
Q5:能把一个结构体header放入vector，通过tcp连接传输后再取出来吗？
A:我觉得不能
Q6：Attention：vector<char>会比你存放的数据更大，比如在我的程序中，我往vector<char>
中写入10个char，但是vector.size()却等于34
Q7:大量的epoll events的存在会降低效率吗？？
A：我的设计：服务器为所有connfd添加一个EPOLLIN，另一种方案：先把偶数设置EPOLLIN，奇数没有添加event事件
Q8:关于epoll_wait的MaxEventSize和listen中的backlog大小的选择
将MaxEventSize = 10000，backlog = 5000，程序可以建立10000连接并运行
如果设置较小的MaxEventSize(=1000), backlog(=500), 则不能建立10000连接数目，为什么？？？
Q9:有时候read会报错：Resource temporarily unavailable（nread = -1）
A:是发生了WEOULDBLOCK，可是为什么会产生EWOULDBLOCK？？(在连接数为，发送报文大小为10kb的时候)，
可能是因为发送的报文太大了，socket缓冲区大小不够？
Q10：服务器端发送头部的时候也可能被EWOULDBLOCK，因为此时上一轮